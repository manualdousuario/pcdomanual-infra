services:
  miniflux:
    image: miniflux/miniflux:2.0.51
    environment:
      ADMIN_USERNAME: {{ MINIFLUX_ADMIN_USERNAME }}
      ADMIN_PASSWORD: {{ MINIFLUX_ADMIN_PASSWORD }}
      BASE_URL: "https://miniflux.{{ domain }}"
      BATCH_SIZE: 500
      DATABASE_URL: "host=db user={{ MINIFLUX_POSTGRES_USER }} password={{ MINIFLUX_POSTGRES_PASSWORD }} dbname={{ MINIFLUX_POSTGRES_DATABASE }} sslmode=disable"
      CLEANUP_ARCHIVE_UNREAD_DAYS: 60
      CLEANUP_ARCHIVE_READ_DAYS: 30
      CREATE_ADMIN: 1
      POLLING_FREQUENCY: 20
      POLLING_SCHEDULER: entry_frequency
      RUN_MIGRATIONS: 1
      WORKER_POOL_SIZE: 10
    depends_on:
      db:
        condition: service_healthy
    networks:
      - {{ docker_external_network_name }}
      - default
    restart: unless-stopped
    labels:
      caddy: "miniflux.{{ domain }}"
      caddy.reverse_proxy.header_up_0: "-User-Agent"
      caddy.reverse_proxy: {% raw %} "{{upstreams 8080}}" {% endraw %}

  db:
    image: postgres:15.3
    environment:
      POSTGRES_USER: {{ MINIFLUX_POSTGRES_USER }}
      POSTGRES_PASSWORD: {{ MINIFLUX_POSTGRES_PASSWORD }}
      POSTGRES_DB: {{ MINIFLUX_POSTGRES_DATABASE }}
    volumes:
      - db:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "{{ MINIFLUX_POSTGRES_USER }}", "-d", "{{ MINIFLUX_POSTGRES_DATABASE }}"]
      interval: 10s
      start_period: 30s

{% if MINIFLUX_BACKUP_ENABLED %}
  gobackup:
    image: huacnlee/gobackup:v2.2.0
    entrypoint: /usr/local/bin/gobackup
    command: run
    volumes:
      - "{{ backup_path }}:/host"
      - "{{ app_path }}/gobackup.yaml:/etc/gobackup/gobackup.yaml"
{% endif %}
    
volumes:
  db:

networks:
  {{ docker_external_network_name }}:
    external: true
